<?php

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class EmpfohlenSetting {
	private $empfohlen_setting_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'empfohlen_setting_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'empfohlen_setting_page_init' ) );
	}

	public function empfohlen_setting_add_plugin_page() {
			
		 // echo "<pre>  "; print_r( ' setting ' ); echo "</pre> ";  exit; 

		add_menu_page(
			__('Empfohlen', 'empfohlen' ), 
			__('Empfohlen', 'empfohlen' ), 
			'manage_emp_menu', // capability
			'empfohlen', // menu_slug
			array( $this, 'empfohlen_dashboard_admin_page' ), // function
			'dashicons-dashboard', // icon_url
			3 // position
		);


		add_submenu_page(
	        'empfohlen',
	        __( 'Empfohlen Dashboard', 'empfohlen' ),
	        __( 'Dashboard', 'empfohlen' ),
	        'manage_emp_menu_dashboard',
	        'empfohlen-dashboard',
	        array( $this, 'empfohlen_dashboard_admin_page' ),
	        0
    	);

		add_submenu_page(
	        'empfohlen',
	        __( 'Empfohlen Setting', 'empfohlen' ),
	        __( 'Empfohlen Setting', 'empfohlen' ),
	        'manage_emp_menu_setting',
	        'empfohlen-setting',
	        array( $this, 'empfohlen_setting_create_admin_page' )
    	);

		 
	}



	

	public function empfohlen_setting_create_admin_page() { 
		$this->empfohlen_setting_options = get_option( 'emp_setting' ); ?>

		<div class="wrap">
			<h2>Empfohlen Setting</h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'empfohlen_setting_option_group' );
					do_settings_sections( 'empfohlen-setting-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function empfohlen_setting_page_init() {
		register_setting(
			'empfohlen_setting_option_group', // option_group
			'emp_setting', // option_name
			array( $this, 'empfohlen_setting_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'empfohlen_setting_setting_section', // id
			'Settings', // title
			array( $this, 'empfohlen_setting_section_info' ), // callback
			'empfohlen-setting-admin' // page
		);

		add_settings_field(
			'auto_mail_0', // id
			'Auto Mail', // title
			array( $this, 'auto_mail_0_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);

		add_settings_field(
			'auto_mail_description_1', // id
			'Auto Mail Description', // title
			array( $this, 'auto_mail_description_1_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);


		add_settings_field(
			'emp_email_verification', // id
			'New Registeration Email Verification', // title
			array( $this, 'new_reg_email_verification' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);

		add_settings_field(
			'emp_currency', // id
			'Currency', // title
			array( $this, 'emp_currency_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);

		add_settings_field(
			'emp_member_dashboard', // id
			'MemberDashboard', // title
			array( $this, 'emp_member_dashboard_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);



		add_settings_field(
			'emp_login_page', // id
			'Login Page', // title
			array( $this, 'emp_login_page_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);


		add_settings_field(
			'emp_register_page', // id
			'Register Page', // title
			array( $this, 'emp_registerpage_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);


		add_settings_field(
			'emp_forex_api', // id
			'Currency api', // title
			array( $this, 'emp_currency_forex_api_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);


		add_settings_field(
			'emp_forex', // id
			'Currency api', // title
			array( $this, 'emp_currency_forex_page_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);


		add_settings_field(
			'emp_new_reg_skills', // id
			'New Register User Skills', // title
			array( $this, 'emp_new_reg_skills_callback' ), // callback
			'empfohlen-setting-admin', // page
			'empfohlen_setting_setting_section' // section
		);


	}

	public function empfohlen_setting_sanitize($input) {

		// echo "<pre> empfohlen_setting_sanitizeinput "; print_r( $input ); echo "</pre> ";  

		$sanitary_values = array();
		if ( isset( $input['auto_mail_0'] ) ) {
			$sanitary_values['auto_mail_0'] = $input['auto_mail_0'];
		}

		if ( isset( $input['auto_mail_description_1'] ) ) {
			$sanitary_values['auto_mail_description_1'] = esc_textarea( $input['auto_mail_description_1'] );
		}
		
		if ( isset( $input['new_reg_email_verification'] ) ) {
			$sanitary_values['new_reg_email_verification'] = esc_textarea( $input['new_reg_email_verification'] );
		}

		if ( isset( $input['emp_currency'] ) ) {
			$sanitary_values['emp_currency'] = sanitize_text_field( $input['emp_currency'] );
		}

		if ( isset( $input['emp_member_dashboard'] ) ) {
			$sanitary_values['emp_member_dashboard'] = sanitize_text_field( $input['emp_member_dashboard'] );
		}

		if ( isset( $input['emp_login_page'] ) ) {
			$sanitary_values['emp_login_page'] = sanitize_text_field( $input['emp_login_page'] );
		}

		if ( isset( $input['emp_register_page'] ) ) {
			$sanitary_values['emp_register_page'] = sanitize_text_field( $input['emp_register_page'] );
		}

		if ( isset( $input['emp_forex_api'] ) ) {
			$sanitary_values['emp_forex_api'] = sanitize_text_field( $input['emp_forex_api'] );
		}

		if ( isset( $input['emp_forex'] ) ) {
			$sanitary_values['emp_forex'] = $input['emp_forex'];
		}



		if ( isset( $input['emp_new_register_skill'] ) ) {
			$sanitary_values['emp_new_register_skill'] = $input['emp_new_register_skill'];
		}


		return $sanitary_values;
	}

	public function empfohlen_setting_section_info() {
		
	}

	public function auto_mail_0_callback() {
		printf(
			'<input type="checkbox" name="emp_setting[auto_mail_0]" id="auto_mail_0" value="auto_mail_0" %s> <label for="auto_mail_0">Enable sending auto email to new user. </label>',
			( isset( $this->empfohlen_setting_options['auto_mail_0'] ) && $this->empfohlen_setting_options['auto_mail_0'] === 'auto_mail_0' ) ? 'checked' : ''
		);
	}

	public function auto_mail_description_1_callback() {
		printf(
			'<textarea class="large-text" rows="5" name="emp_setting[auto_mail_description_1]" id="auto_mail_description_1">%s</textarea>',
			isset( $this->empfohlen_setting_options['auto_mail_description_1'] ) ? esc_attr( $this->empfohlen_setting_options['auto_mail_description_1']) : ''
		);
	}

	public function new_reg_email_verification() {
		printf(
			'<textarea class="large-text" rows="5" name="emp_setting[new_reg_email_verification]" id="new_reg_email_verification">%s</textarea>',
			isset( $this->empfohlen_setting_options['new_reg_email_verification'] ) ? esc_attr( $this->empfohlen_setting_options['new_reg_email_verification']) : ''
		);
	}

	public function emp_currency_callback() {
		printf(
			'<input class="regular-text" type="text" name="emp_setting[emp_currency]" id="emp_currency" value="%s">',
			isset( $this->empfohlen_setting_options['emp_currency'] ) ? esc_attr( $this->empfohlen_setting_options['emp_currency']) : ''
		);
	}

	public function emp_member_dashboard_callback() {
		$all_pages = get_pages(); 
			if (!empty($all_pages)){
				printf('<select name="emp_setting[emp_member_dashboard]" id="emp_member_dashboard">');
				foreach ($all_pages as $page) {
					$page_selected = (isset($this->empfohlen_setting_options['emp_member_dashboard']) && ($this->empfohlen_setting_options['emp_member_dashboard'] == $page->ID))? 'selected="selected"' : '';
					printf('<option value="%s" %s >%s</option>',$page->ID,$page_selected,$page->post_title);
				}
				printf('</select>');
			}
	}


	public function emp_login_page_callback() {
		 	$all_pages = get_pages(); 
			if (!empty($all_pages)){
				printf('<select name="emp_setting[emp_login_page]" id="emp_login_page">');
				foreach ($all_pages as $page) {
					$page_selected = (isset($this->empfohlen_setting_options['emp_login_page']) && ($this->empfohlen_setting_options['emp_login_page'] == $page->ID))? 'selected="selected"' : '';
					printf('<option value="%s" %s >%s</option>',$page->ID,$page_selected,$page->post_title);
				}
				printf('</select>');
			}
	}

	public function emp_registerpage_callback() {
		 	$all_pages = get_pages(); 
			if (!empty($all_pages)){
				printf('<select name="emp_setting[emp_register_page]" id="emp_register_page">');
				foreach ($all_pages as $page) {
					$page_selected = (isset($this->empfohlen_setting_options['emp_register_page']) && ($this->empfohlen_setting_options['emp_register_page'] == $page->ID))? 'selected="selected"' : '';
					printf('<option value="%s" %s >%s</option>',$page->ID,$page_selected,$page->post_title);
				}
				printf('</select>');
			}
	}

	public function emp_currency_forex_api_callback() {  
		printf(
			'<input class="regular-text" type="text" name="emp_setting[emp_forex_api]" id="emp_forex_api" value="%s">',
			isset( $this->empfohlen_setting_options['emp_forex_api'] ) ? esc_attr( $this->empfohlen_setting_options['emp_forex_api']) : ''
		);
	}


	public function emp_new_reg_skills_callback() {
		 	$all_skills = get_terms(array('taxonomy' => 'skill','hide_empty' => false));
		 	// echo "<pre> all_skills "; print_r( $this->empfohlen_setting_options ); echo "</pre> ";  
		 	$selected_skills = $this->empfohlen_setting_options['emp_new_register_skill'];
			if (!empty($all_skills)){
				printf('<select class="select2" name="emp_setting[emp_new_register_skill][]" id="emp_new_register_skill" multiple style="min-width: 300px;">');
				foreach ($all_skills as $skill) {
					$page_selected = '';
					$page_selected = in_array($skill->term_id,$selected_skills)? 'selected="selected"' : '';
					printf('<option value="%s" %s >%s</option>',$skill->term_id,$page_selected,$skill->name);
				}
				printf('</select>');
			}
	} 

	public function emp_currency_forex_page_callback() {
			 	// echo "<pre> empfohlen_setting_options "; print_r( $this->empfohlen_setting_options ); echo "</pre> "; 

			 $forex_url =  'http://apilayer.net/api/live?access_key=4c6fe159ab0c42a9c5bdc80f1d84548b&currencies=GBP,JPY,AUD,EUR,PKR&source=USD&format=1'; 
			 $forex_resp = wp_safe_remote_get($forex_url);
			 $forex_body = wp_remote_retrieve_body( $forex_resp );
			 $forex_json = json_decode( $forex_body );

			 // echo "<pre> forex_json "; print_r( $forex_json ); echo "</pre> ";  
			 // echo "<pre> forex_resp "; print_r( $forex_resp ); echo "</pre> ";  
			 // echo "<pre> forex_resp "; print_r( $forex_json->success ); echo "</pre> ";  
			
			 $forex_data = array();
			 $forex_data['USD'] = 1;
			 $forex_data['GBP'] = $this->empfohlen_setting_options['emp_forex']['GBP'];
			 $forex_data['JPY'] = $this->empfohlen_setting_options['emp_forex']['JPY'];
			 $forex_data['AUD'] = $this->empfohlen_setting_options['emp_forex']['AUD'];
			 $forex_data['EUR'] = $this->empfohlen_setting_options['emp_forex']['EUR'];
			 $forex_data['PKR'] = $this->empfohlen_setting_options['emp_forex']['PKR'];

		

			 if( $forex_json->success && !empty($forex_json->quotes) ){
			 	echo '<p>Succesfully get api forex data </p>';
			 	 $forex_data['GBP'] = $forex_json->quotes->USDGBP;
			 	 $forex_data['JPY'] = $forex_json->quotes->USDJPY;
			 	 $forex_data['AUD'] = $forex_json->quotes->USDAUD;
			 	 $forex_data['EUR'] = $forex_json->quotes->USDEUR;
			 	 $forex_data['PKR'] = $forex_json->quotes->USDPKR;
			 }

				?>
				<div class="emp_forex"> 
				<h4>Forex Rates </h4>
				
				<p>Forex Rates https://currencylayer.com/dashboard </p>
				<p>API used http://apilayer.net/api </p>

				<p><strong>Base Currency</strong> USD </p>
				<table>
					<thead>
						<tr>
							<th>Title </th>
							<th>Currency ISO4217 code </th>
							<th>Symbol </th>
							<th>Exchange Rate </th>
						</tr>
					</thead>
					<tbody>
						
						 

						<tr>
							<td>United States dollar</td>
							<td>USD</td>
							<td>$</td>
							<td><input type="text" name="emp_setting[emp_forex][USD]" value="<?php echo $forex_data['USD'] ?>" /></td>
						</tr>

						<tr>
							<td>Pound sterling</td>
							<td>GBP</td>
							<td>£</td>
							<td><input type="text" name="emp_setting[emp_forex][GBP]" value="<?php echo $forex_data['GBP'] ?>" /></td>
						</tr>

						<tr>
							<td>Japanese yen</td>
							<td>JPY</td>
							<td>¥</td>
							<td><input type="text" name="emp_setting[emp_forex][JPY]" value="<?php echo $forex_data['JPY'] ?>" /></td>
						</tr>

						<tr>
							<td>Australian dollar </td>
							<td>AUD</td>
							<td>$</td>
							<td><input type="text" name="emp_setting[emp_forex][AUD]" value="<?php echo $forex_data['AUD'] ?>" /></td>
						</tr>

						<tr>
							<td>Euro </td>
							<td>EUR</td>
							<td>€</td>
							<td><input type="text" name="emp_setting[emp_forex][EUR]" value="<?php echo $forex_data['EUR'] ?>" /></td>
						</tr>

						<tr>
							<td>Pak ruppies </td>
							<td>PKR</td>
							<td>Rs</td>
							<td><input type="text" name="emp_setting[emp_forex][PKR]" value="<?php echo $forex_data['PKR'] ?>" /></td>
						</tr>

					</tbody>
				</table>
				</div>
				<?php

	  
		 
	}


	public function empfohlen_dashboard_admin_page(){ ?>

		<h1 style="text-align: center;">Dashboard </h1>

		<?php

		 
		$project_query = new WP_Query( array('post_type' => 'project') );
		$project = $project_query->found_posts;

		$withdrawl_query = new WP_Query( array('post_type' => 'withdrawl') );
		$withdrawl = $withdrawl_query->found_posts;
		 
		$ticket_query = new WP_Query( array('post_type' => 'ticket') );
		$ticket = $ticket_query->found_posts;

		$request_query = new WP_Query( array('post_type' => 'request') );
		$request = $request_query->found_posts;

		$task_query = new WP_Query( array('post_type' => 'task') );
		$task = $task_query->found_posts;

		$invoice_query = new WP_Query( array('post_type' => 'invoice') );
		$invoice = $invoice_query->found_posts;





		$pending_request =  new WP_Query( array(
																'post_type' => 'request',
																'meta_query' => array(
																	array(
																		'key'     => 'request_status',
																		'value'   => 'pending',
																	),
																),
															));


		$pending_task =  new WP_Query( array(
																'post_type' => 'task',
																'meta_query' => array(
																	array(
																		'key'     => 'task_status',
																		'value'   => 'pending',
																	),
																),
															));

		$submitted_task =  new WP_Query( array(
																'post_type' => 'task',
																'meta_query' => array(
																	array(
																		'key'     => 'task_status',
																		'value'   => 'submitted',
																	),
																),
															));



		




		 // echo "<pre> project "; print_r(  $project ); echo "</pre> ";  


		?>

		<div class="row block_row">
				
				<div class="emp_d_block block_w20p">
					<a class="d_link" href="<?php echo get_admin_url()?>edit.php?post_type=project">
					<div class="d_block_icon">
						 <img src="<?php echo EMPFOHLEN_URI?>images/dashboard_icons/project.png">
					</div>
					<h3 class="btitle">Projects (<?php echo $project;?>)</h3>
					</a>
				</div>

				<div class="emp_d_block block_w20p">
					<a class="d_link" href="<?php echo get_admin_url() ?>edit.php?post_type=request">
					<div class="d_block_icon">
						 <img src="<?php echo EMPFOHLEN_URI?>images/dashboard_icons/request.png">
					</div>
					<h3 class="btitle">Request (<?php echo $request;?>)</h3>
						
						<div class="d_p_stats">
							<span class="stats_counter">Pending : <?php echo $pending_request->found_posts; ?></span>
						</div>

					</a>
				</div>

				<div class="emp_d_block block_w20p">
					<a class="d_link" href="<?php echo get_admin_url() ?>edit.php?post_type=task">
					<div class="d_block_icon">
						 <img src="<?php echo EMPFOHLEN_URI?>images/dashboard_icons/task.png">
					</div>
					<h3 class="btitle">Task (<?php echo $task;?>)</h3>

					<div class="d_p_stats">
							<span class="stats_counter">Pending : <?php echo $pending_task->found_posts; ?></span>
							<span class="stats_counter">Submitted : <?php echo $submitted_task->found_posts; ?></span>
						</div>

					</a>
				</div>


				<div class="emp_d_block block_w20p">
					<a class="d_link" href="<?php echo get_admin_url() ?>edit.php?post_type=invoice">
					<div class="d_block_icon">
						 <img src="<?php echo EMPFOHLEN_URI?>images/dashboard_icons/buy.png">
					</div>
					<h3 class="btitle">Invoice(<?php echo $invoice;?>)</h3>
					</a>
				</div>

				<hr />

				<div class="emp_d_block block_w20p">
					<a class="d_link" href="<?php echo get_admin_url() ?>edit.php?post_type=withdrawl">
					<div class="d_block_icon">
						 <img src="<?php echo EMPFOHLEN_URI?>images/dashboard_icons/withdraw.png">
					</div>
					<h3 class="btitle">Withdrawl (<?php echo $withdrawl;?>)</h3>
					</a>
				</div>

				<div class="emp_d_block block_w20p">
					<a class="d_link" href="<?php echo get_admin_url() ?>edit.php?post_type=ticket">
					<div class="d_block_icon">
						 <img src="<?php echo EMPFOHLEN_URI?>images/dashboard_icons/tasks.png">
					</div>
					<h3 class="btitle">Ticket (<?php echo $ticket;?>)</h3>
					</a>
				</div>

				<div class="emp_d_block block_w20p">
					<a class="d_link" href="<?php echo get_admin_url() ?>edit.php?page=empfohlen-setting">
					<div class="d_block_icon">
						 <img src="<?php echo EMPFOHLEN_URI?>images/dashboard_icons/settings.png">
					</div>
					<h3 class="btitle">Setting</h3>
					</a>
				</div>

				<div class="emp_d_block block_w20p">
					<a class="d_link" href="<?php echo get_admin_url() ?>edit-tags.php?taxonomy=skillg">
					<div class="d_block_icon">
						 <img src="<?php echo EMPFOHLEN_URI?>images/dashboard_icons/skill.png">
					</div>
					<h3 class="btitle">Skills</h3>
					</a>
				</div>



				



		</div>


	 

	<?php
	}

}
if ( is_admin() )
	$empfohlen_setting = new EmpfohlenSetting();



/* 
 * Retrieve this value with:
 * $empfohlen_setting_options = get_option( 'emp_setting' ); // Array of All Options
 * $auto_mail_0 = $empfohlen_setting_options['auto_mail_0']; // Auto Mail
 * $auto_mail_description_1 = $empfohlen_setting_options['auto_mail_description_1']; // Auto Mail Description
 * $emp_currency = $empfohlen_setting_options['emp_currency']; // Currency
 */

